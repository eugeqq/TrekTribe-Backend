
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.3
 * Query Engine version: bb420e667c1820a8c05a38023385f6cc7ef8e83a
 */
Prisma.prismaVersion = {
  client: "6.16.3",
  engine: "bb420e667c1820a8c05a38023385f6cc7ef8e83a"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UsuarioScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  email: 'email',
  password: 'password',
  creadoEn: 'creadoEn'
};

exports.Prisma.ViajeScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  descripcion: 'descripcion',
  fechaInicio: 'fechaInicio',
  fechaFin: 'fechaFin',
  creadoEn: 'creadoEn'
};

exports.Prisma.MiembroViajeScalarFieldEnum = {
  id: 'id',
  usuarioId: 'usuarioId',
  viajeId: 'viajeId',
  rol: 'rol'
};

exports.Prisma.TareaScalarFieldEnum = {
  id: 'id',
  titulo: 'titulo',
  descripcion: 'descripcion',
  estado: 'estado',
  responsableId: 'responsableId',
  viajeId: 'viajeId',
  creadoEn: 'creadoEn'
};

exports.Prisma.GastoScalarFieldEnum = {
  id: 'id',
  monto: 'monto',
  categoria: 'categoria',
  descripcion: 'descripcion',
  pagadoPorId: 'pagadoPorId',
  viajeId: 'viajeId',
  creadoEn: 'creadoEn'
};

exports.Prisma.ChatMensajeScalarFieldEnum = {
  id: 'id',
  contenido: 'contenido',
  usuarioId: 'usuarioId',
  viajeId: 'viajeId',
  enviadoEn: 'enviadoEn'
};

exports.Prisma.ItinerarioEventoScalarFieldEnum = {
  id: 'id',
  titulo: 'titulo',
  descripcion: 'descripcion',
  fechaHora: 'fechaHora',
  viajeId: 'viajeId'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  Usuario: 'Usuario',
  Viaje: 'Viaje',
  MiembroViaje: 'MiembroViaje',
  Tarea: 'Tarea',
  Gasto: 'Gasto',
  ChatMensaje: 'ChatMensaje',
  ItinerarioEvento: 'ItinerarioEvento'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/mariaeugeniaq/proyect/TrekTribe/src/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/mariaeugeniaq/proyect/TrekTribe/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.3",
  "engineVersion": "bb420e667c1820a8c05a38023385f6cc7ef8e83a",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../src/generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel Usuario {\n  id       Int            @id @default(autoincrement())\n  nombre   String\n  email    String         @unique\n  password String\n  viajes   MiembroViaje[]\n  tareas   Tarea[]        @relation(\"TareasUsuario\")\n  gastos   Gasto[]        @relation(\"GastosUsuario\")\n  mensajes ChatMensaje[]\n  creadoEn DateTime       @default(now())\n}\n\nmodel Viaje {\n  id          Int                @id @default(autoincrement())\n  nombre      String\n  descripcion String?\n  fechaInicio DateTime?\n  fechaFin    DateTime?\n  miembros    MiembroViaje[]\n  tareas      Tarea[]\n  gastos      Gasto[]\n  mensajes    ChatMensaje[]\n  itinerario  ItinerarioEvento[]\n  creadoEn    DateTime           @default(now())\n}\n\nmodel MiembroViaje {\n  id        Int     @id @default(autoincrement())\n  usuarioId Int\n  viajeId   Int\n  rol       String  @default(\"miembro\") // admin, miembro, invitado\n  usuario   Usuario @relation(fields: [usuarioId], references: [id])\n  viaje     Viaje   @relation(fields: [viajeId], references: [id])\n}\n\nmodel Tarea {\n  id            Int      @id @default(autoincrement())\n  titulo        String\n  descripcion   String?\n  estado        String   @default(\"pendiente\") // pendiente, completada\n  responsableId Int?\n  viajeId       Int\n  responsable   Usuario? @relation(\"TareasUsuario\", fields: [responsableId], references: [id])\n  viaje         Viaje    @relation(fields: [viajeId], references: [id])\n  creadoEn      DateTime @default(now())\n}\n\nmodel Gasto {\n  id          Int      @id @default(autoincrement())\n  monto       Float\n  categoria   String?\n  descripcion String?\n  pagadoPorId Int\n  viajeId     Int\n  pagadoPor   Usuario  @relation(\"GastosUsuario\", fields: [pagadoPorId], references: [id])\n  viaje       Viaje    @relation(fields: [viajeId], references: [id])\n  creadoEn    DateTime @default(now())\n}\n\nmodel ChatMensaje {\n  id        Int      @id @default(autoincrement())\n  contenido String\n  usuarioId Int\n  viajeId   Int\n  usuario   Usuario  @relation(fields: [usuarioId], references: [id])\n  viaje     Viaje    @relation(fields: [viajeId], references: [id])\n  enviadoEn DateTime @default(now())\n}\n\nmodel ItinerarioEvento {\n  id          Int      @id @default(autoincrement())\n  titulo      String\n  descripcion String?\n  fechaHora   DateTime\n  viajeId     Int\n  viaje       Viaje    @relation(fields: [viajeId], references: [id])\n}\n",
  "inlineSchemaHash": "ca1690b2a68cf0696d19ff0758d3253ad86fbd4693d9f337d8f90b9a80fa2bf1",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Usuario\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nombre\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"viajes\",\"kind\":\"object\",\"type\":\"MiembroViaje\",\"relationName\":\"MiembroViajeToUsuario\"},{\"name\":\"tareas\",\"kind\":\"object\",\"type\":\"Tarea\",\"relationName\":\"TareasUsuario\"},{\"name\":\"gastos\",\"kind\":\"object\",\"type\":\"Gasto\",\"relationName\":\"GastosUsuario\"},{\"name\":\"mensajes\",\"kind\":\"object\",\"type\":\"ChatMensaje\",\"relationName\":\"ChatMensajeToUsuario\"},{\"name\":\"creadoEn\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Viaje\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nombre\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"descripcion\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fechaInicio\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"fechaFin\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"miembros\",\"kind\":\"object\",\"type\":\"MiembroViaje\",\"relationName\":\"MiembroViajeToViaje\"},{\"name\":\"tareas\",\"kind\":\"object\",\"type\":\"Tarea\",\"relationName\":\"TareaToViaje\"},{\"name\":\"gastos\",\"kind\":\"object\",\"type\":\"Gasto\",\"relationName\":\"GastoToViaje\"},{\"name\":\"mensajes\",\"kind\":\"object\",\"type\":\"ChatMensaje\",\"relationName\":\"ChatMensajeToViaje\"},{\"name\":\"itinerario\",\"kind\":\"object\",\"type\":\"ItinerarioEvento\",\"relationName\":\"ItinerarioEventoToViaje\"},{\"name\":\"creadoEn\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"MiembroViaje\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"usuarioId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"viajeId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"rol\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"usuario\",\"kind\":\"object\",\"type\":\"Usuario\",\"relationName\":\"MiembroViajeToUsuario\"},{\"name\":\"viaje\",\"kind\":\"object\",\"type\":\"Viaje\",\"relationName\":\"MiembroViajeToViaje\"}],\"dbName\":null},\"Tarea\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"titulo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"descripcion\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"estado\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"responsableId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"viajeId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"responsable\",\"kind\":\"object\",\"type\":\"Usuario\",\"relationName\":\"TareasUsuario\"},{\"name\":\"viaje\",\"kind\":\"object\",\"type\":\"Viaje\",\"relationName\":\"TareaToViaje\"},{\"name\":\"creadoEn\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Gasto\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"monto\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"categoria\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"descripcion\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pagadoPorId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"viajeId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"pagadoPor\",\"kind\":\"object\",\"type\":\"Usuario\",\"relationName\":\"GastosUsuario\"},{\"name\":\"viaje\",\"kind\":\"object\",\"type\":\"Viaje\",\"relationName\":\"GastoToViaje\"},{\"name\":\"creadoEn\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"ChatMensaje\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"contenido\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"usuarioId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"viajeId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"usuario\",\"kind\":\"object\",\"type\":\"Usuario\",\"relationName\":\"ChatMensajeToUsuario\"},{\"name\":\"viaje\",\"kind\":\"object\",\"type\":\"Viaje\",\"relationName\":\"ChatMensajeToViaje\"},{\"name\":\"enviadoEn\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"ItinerarioEvento\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"titulo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"descripcion\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fechaHora\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"viajeId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"viaje\",\"kind\":\"object\",\"type\":\"Viaje\",\"relationName\":\"ItinerarioEventoToViaje\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

